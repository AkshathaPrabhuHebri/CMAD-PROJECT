pipeline{

    agent none 


    stages{
        stage("build-server"){
            agent{
                 docker{
                   image 'maven:3.6.1-jdk-8-slim'
                   args '-v m2cache:/root/.m2'
                 }
            } 

            when{
              changeset "**/syslog-server/**"
            }
            steps{
                echo "Building syslog server app..."
                dir("syslog-server"){
                  sh 'mvn compile'
                }
            }
        }
        stage("test-server"){
            agent{
                 docker{
                   image 'maven:3.6.1-jdk-8-slim'
                   args '-v m2cache:/root/.m2'
                 }
            }
            when{
              changeset "**/syslog-server/**"
            }
            steps{
                echo "Testing syslog server app..."
                dir("syslog-server"){
                  sh 'mvn clean test'
                }
            }
        }
        stage("package-server"){
            agent{
                 docker{
                   image 'maven:3.6.1-jdk-8-slim'
                   args '-v m2cache:/root/.m2'
                 }
            }
//       when{
//              changeset "**/syslog-server/**"
//              branch 'master'
//            }
            steps{
                echo "Packaging syslog server app..."
                dir("syslog-server"){
                  sh 'mvn package -DskipTests'
                  archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }
        
       stage('copy-artifact'){
           agent any
           steps{
           		echo "copying artifact from 'package-server' stage"
                copyArtifacts filter: '**/target/*.jar', fingerprintArtifacts: true, projectName: '${JOB_NAME}', selector: specific('${BUILD_NUMBER}'), target: './syslog-server/'
                sh 'ls -la ./syslog-server/target'
           }

       }


       stage('docker-package-server'){
         agent any
//         when{
//           changeset "**/syslog-server/**"
//         }
         steps{
           echo 'Packaging worker app with docker'
           script{
             docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                def workerImage = docker.build("myselfakshatha/cmad-syslog-server:v${env.BUILD_ID}", "./syslog-server")
                workerImage.push()
                workerImage.push("latest")
             }
          } 
      }
}

    }
    
    post{
        always{
            echo "This pipeline run is completed.."
        }
    }
}
